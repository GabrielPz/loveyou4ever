generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Plans {
  BASIC
  PREMIUM
  SUPER_PREMIUM
}

enum PaymenStatus {
  PENDING
  PAID
  CANCELLED
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")
  relationships Relationships[]
  role          Role            @default(USER)

  @@map("users")
}

model Relationships {
  id          String       @id @default(uuid())
  images      Images[]
  videoLink   String?
  description String
  userId      String
  paymentId   String?
  status      PaymenStatus @default(PENDING)
  user        User         @relation(fields: [userId], references: [id])
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  Payments    Payments?    @relation
  Plan        Plans        @default(BASIC)

  @@map("relationhips")
}

model Images {
  id             String        @id @default(uuid())
  imageUrl       String
  contentDesc    String
  relationshipId String
  relationship   Relationships @relation(fields: [relationshipId], references: [id])
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")

  @@map("images")
}

model Payments {
  id             String        @id @default(uuid())
  relationShipId String        @unique
  relationship   Relationships @relation(fields: [relationShipId], references: [id])
  plan           Plans         @default(BASIC)
  status         PaymenStatus  @default(PENDING)
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")

  @@map("payments")
}
